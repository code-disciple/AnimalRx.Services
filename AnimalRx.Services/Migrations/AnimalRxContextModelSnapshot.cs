// <auto-generated />
using System;
using AnimalRx.Services.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AnimalRx.Services.Migrations
{
    [DbContext(typeof(AnimalRxContext))]
    partial class AnimalRxContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AnimalRx.Services.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("patient_id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdmitted")
                        .HasColumnName("date_admitted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DateReleased")
                        .HasColumnName("date_released")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("Diagnosis")
                        .HasColumnName("diagnosis")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("PatientId")
                        .HasName("pk_patient");

                    b.ToTable("patient");
                });

            modelBuilder.Entity("AnimalRx.Services.Models.Reminder", b =>
                {
                    b.Property<long>("ReminderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("reminder_id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DueDate")
                        .HasColumnName("due_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasColumnType("text");

                    b.HasKey("ReminderId")
                        .HasName("pk_reminder");

                    b.ToTable("reminder");
                });

            modelBuilder.Entity("AnimalRx.Services.Models.Treatment", b =>
                {
                    b.Property<long>("TreatmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("treatment_id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("PatientId")
                        .HasColumnName("patient_id")
                        .HasColumnType("bigint");

                    b.Property<int?>("PatientId1")
                        .HasColumnName("patient_id1")
                        .HasColumnType("integer");

                    b.Property<string>("TreatmentAndDose")
                        .HasColumnName("treatment_and_dose")
                        .HasColumnType("text");

                    b.HasKey("TreatmentId")
                        .HasName("pk_treatment");

                    b.HasIndex("PatientId1")
                        .HasName("ix_treatment_patient_id1");

                    b.ToTable("treatment");
                });

            modelBuilder.Entity("AnimalRx.Services.Models.Vaccine", b =>
                {
                    b.Property<long>("VaccineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("vaccine_id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Dose1Delivered")
                        .HasColumnName("dose1delivered")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("Dose1DeliveredDate")
                        .HasColumnName("dose1delivered_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Dose1Required")
                        .HasColumnName("dose1required")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("Dose1TargetDate")
                        .HasColumnName("dose1target_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Dose2Delivered")
                        .HasColumnName("dose2delivered")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("Dose2DeliveredDate")
                        .HasColumnName("dose2delivered_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Dose2Required")
                        .HasColumnName("dose2required")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("Dose2TargetDate")
                        .HasColumnName("dose2target_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Dose3Delivered")
                        .HasColumnName("dose3delivered")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("Dose3DeliveredDate")
                        .HasColumnName("dose3delivered_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Dose3Required")
                        .HasColumnName("dose3required")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("Dose3TargetDate")
                        .HasColumnName("dose3target_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("PatientId")
                        .HasColumnName("patient_id")
                        .HasColumnType("bigint");

                    b.Property<int?>("PatientId1")
                        .HasColumnName("patient_id1")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasColumnType("text");

                    b.HasKey("VaccineId")
                        .HasName("pk_vaccine");

                    b.HasIndex("PatientId1")
                        .HasName("ix_vaccine_patient_id1");

                    b.ToTable("vaccine");
                });

            modelBuilder.Entity("AnimalRx.Services.Models.Treatment", b =>
                {
                    b.HasOne("AnimalRx.Services.Models.Patient", null)
                        .WithMany("Treatments")
                        .HasForeignKey("PatientId1")
                        .HasConstraintName("fk_treatment_patient_patient_id1");
                });

            modelBuilder.Entity("AnimalRx.Services.Models.Vaccine", b =>
                {
                    b.HasOne("AnimalRx.Services.Models.Patient", null)
                        .WithMany("Vaccines")
                        .HasForeignKey("PatientId1")
                        .HasConstraintName("fk_vaccine_patient_patient_id1");
                });
#pragma warning restore 612, 618
        }
    }
}
